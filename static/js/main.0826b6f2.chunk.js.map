{"version":3,"sources":["components/layout/footer.js","components/layout/layout.js","assets/images/PvalueHist.png","pages/Home.js","redux/types/tableData.js","redux/service.js","components/DataImport/ClipboardImport.js","redux/actions/tableData.js","components/DataImport/ImportPanel.js","components/BaseTable/DataTable.js","components/BaseTable/TablePanel.js","components/Echart/js/TemplateOptions/PvalueHistOption.js","components/Echart/Chart.js","components/Echart/ChartPanel.js","components/Echart/js/CreatePvalueHist.js","pages/PvalueDistribution.js","App.js","reportWebVitals.js","redux/reducers/tableData.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Copyright","style","textAlign","height","display","flexDirection","justifyContent","Typography","variant","color","align","Date","getFullYear","Layout","props","state","classes","this","Container","maxWidth","Box","Toolbar","className","toolbarSecondary","Grid","container","alignItems","item","to","Link","toolbarButtons","href","mainContainer","children","React","Component","withStyles","theme","marginLeft","textDecoration","fontWeight","root","margin","spacing","toolbar","paddingRight","cursor","minHeight","useStyles","makeStyles","flexGrow","card","Home","title","link","des","map","index","xs","md","Card","elevation","CardActionArea","component","CardMedia","alt","image","myimage","borderBottom","CardContent","marginBottom","fontSize","SET_TABLEDATA","SET_TABLEDATA_SUCCESS","SET_TABLEDATA_FAIL","clipboardy","require","ReadFromClipboard","read","ClipboardImport","dispatch","useDispatch","marginTop","padding","Button","onClick","type","Service","then","longString","result","readString","header","dynamicTyping","beforeFirstChunk","chunk","rows","split","headings","replace","join","tmpColumn","meta","fields","col","colIndex","name","key","dataKey","width","resizable","Column","Alignment","CENTER","sortable","tmpRow","data","row","rowIndex","rowKey","payload","tableColumn","tableRow","catch","error","response","topbarButton","marginRight","backgroundColor","ImportPanel","useState","value","setValue","border","paddingLeft","buttonIndex","size","newValue","Collapse","in","DataTable","useSelector","TableData","loaded","order","sortBy","setSortBy","handleSetSort","onColumnSort","sort","a","b","overflowX","paddingTop","fixed","columns","emptyRenderer","gutterBottom","TablePanel","float","length","text","left","top","tooltip","trigger","axisPointer","animation","lineStyle","formatter","grid","right","bottom","containLabel","xAxis","scale","nameGap","nameLocation","yAxis","splitLine","show","toolbox","feature","dataZoom","zoom","back","brush","rect","polygon","clear","saveAsImage","series","barWidth","itemStyle","borderWidth","maxHeight","overflowY","rotateSelect","position","Chart","plotReady","id","option","notMerge","lazyUpdate","errorMsg","ChartPanel","useEffect","RestParameters","newPlot","mycolumns","myrows","axis","find","x","EventsDict","msg","tmpValue","Number","filter","isNaN","bins","ecStat","histogram","newHistogramOption","JSON","parse","stringify","PvalueHistOption","params","warningMsg","CreatePvalueHist","setOption","setWarningMsg","setErrorMsg","setMSG","setPlotReady","err","PvalueDistribution","CssBaseline","outerTheme","createMuiTheme","palette","primary","main","grey","secondary","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0826b6f2.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Copyright() {\n  return (\n    <div style={{\n      textAlign: 'center', height: '10vh', display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    }}>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n          Yuan Tian\n          {' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport { Container, Box, Toolbar, Grid, Button } from '@material-ui/core';\nimport StickyFooter from \"./footer.js\"\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Box style={{ height: '10vh' }}>\n          <Toolbar className={classes.toolbarSecondary}>\n            <Grid container alignItems=\"center\">\n              <Grid item>              <Link\n                to='/'\n                className={classes.Link}\n              >\n                Little Mountain\n              </Link></Grid>\n              {/* <Grid>\n                <p style={{ fontSize: '0.85em', color: 'darkgrey' }}> &nbsp;&nbsp;&nbsp;A set of simple, easy, and transparent online Bioinformatic Analysis Tool </p>\n              </Grid> */}\n            </Grid>\n\n\n            <div className={classes.toolbarButtons}>\n              <a\n                href='https://yuantian1991.github.io/'\n                className={classes.Link}\n              >\n                Tian\n              </a>\n            </div>\n          </Toolbar>\n        </Box>\n\n        <Container maxWidth=\"lg\" className={classes.mainContainer}>\n          <main>{this.props.children}</main>\n        </Container>\n        <StickyFooter />\n      </Container>\n    );\n  }\n}\n\nLayout.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n  toolbarSecondary: {\n    // borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n  Link: {\n    textDecoration: \"none\",\n    color: 'black',\n    fontWeight: 'bold',\n    \"&:hover \": {\n      color: 'black',\n      textDecoration: \"none\",\n    }\n  },\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  toolbar: {\n    paddingRight: theme.spacing(3),\n    cursor: 'pointer'\n  },\n  mainContainer: {\n    minHeight: '79vh'\n  }\n});\n\nexport default (withStyles(styles)(Layout))","export default __webpack_public_path__ + \"static/media/PvalueHist.9959fec7.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Card, CardActions, Button, CardActionArea, CardMedia, CardContent, Typography, Grid, Container, Box } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport myimage from '../assets/images/PvalueHist.png'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    textAlign: 'left',\n    height: '300px',\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n\n  const myPlots = [\n    {\n      title: 'P value Distribution',\n      link: 'PvalueDistribution',\n      des: 'The first demo for little mountain, which reads a table contains p-value, and return the distribution of this p value. Also it returns various adjusted p value distribution.'\n    }\n  ]\n\n  return (\n    <Container maxWidth=\"md\">\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n\n          {\n            myPlots.map((item, index) => {\n              return (\n                <Grid key={index} item xs={6} md={4}>\n                  <Card elevation={1} className={classes.card}>\n                    <CardActionArea style={{ height: '300px' }} component={Link} to={item.link}>\n                      <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"120\"\n                        image={myimage}\n                        style={{ borderBottom: '1px solid #f4f4f4' }}\n                      />\n                      <CardContent>\n                        <Typography component=\"div\" color=\"primary\">\n                          <Box fontWeight={500} style={{ marginBottom: '0.5em', color: 'black' }}>\n                            {item.title}\n                          </Box>\n                          <Box fontSize=\"15px\" style={{ color: 'darkgrey' }}>\n                            {item.des}\n                          </Box>\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              )\n            })\n          }\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n","export const SET_TABLEDATA = 'SET_TABLEDATA';\nexport const SET_TABLEDATA_SUCCESS = 'SET_TABLEDATA_SUCCESS';\nexport const SET_TABLEDATA_FAIL = 'SET_TABLEDATA_FAIL';","import api from './api';\n// import axios from 'axios';\n\nconst clipboardy = require('clipboardy');\n\nfunction ReadFromClipboard() {\n  return clipboardy.read()\n}\n\nexport default {\n  ReadFromClipboard\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\n\nimport { useDispatch } from 'react-redux';\nimport { ReadFromClipboard } from '../../redux/actions/tableData';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport default function ClipboardImport() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleReadClipboard = () => {\n    dispatch(ReadFromClipboard())\n  }\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: \"0px\", padding: '2em' }}>\n      <Grid container spacing={4}>\n        <Grid item xs={4}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ fontWeight: '900' }}\n            onClick={handleReadClipboard}\n          >\n            Read from Clipboard </Button>\n        </Grid>\n        <Grid item xs={8}>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import { SET_TABLEDATA, SET_TABLEDATA_SUCCESS, SET_TABLEDATA_FAIL } from '../types/tableData';\n\nimport Service from '../service';\nimport { Column } from 'react-base-table';\nimport { readString } from 'react-papaparse'\n\nexport const ReadFromClipboard = () => {\n  return (dispatch) => {\n    dispatch({ type: SET_TABLEDATA });\n    Service.ReadFromClipboard()\n      .then((longString) => {\n\n        const result = readString(longString, {\n          header: true,\n          dynamicTyping: true,\n          beforeFirstChunk: (chunk) => {\n            var rows = chunk.split(/\\r\\n|\\r|\\n/);\n            var headings = rows[0].replace(/[.]/gi, '_');\n            rows[0] = headings;\n            return rows.join(\"\\r\\n\");\n          }\n        })\n        const tmpColumn = result.meta.fields.map((col, colIndex) => {\n          return (\n            {\n              name: col,\n              title: col,\n              key: col,\n              dataKey: col,\n              width: 100,\n              height: 40,\n              resizable: true,\n              align: Column.Alignment.CENTER,\n              sortable: true,\n            }\n          )\n        })\n\n        const tmpRow = result.data.map((row, rowIndex) => ({ ...row, rowKey: rowIndex }))\n\n        dispatch({ type: SET_TABLEDATA_SUCCESS, payload: { tableColumn: tmpColumn, tableRow: tmpRow } });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TABLEDATA_FAIL, payload: { error: error.response } });\n      });\n  };\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography, Collapse, Button, Card, CardMedia, Grid } from '@material-ui/core';\n\nimport ClipboardImport from './ClipboardImport'\n\nconst useStyles = makeStyles((theme) => ({\n  topbarButton: {\n    margin: '6px 10px',\n    marginRight: '20px',\n    fontWeight: '500',\n    color: 'lightgrey',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  }\n}));\n\nexport default function ImportPanel() {\n  const classes = useStyles();\n  const buttomIteams = ['Clipboard', 'CSV/Excel', 'Google Sheets', 'TextArea']\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (newValue) => {\n    if (newValue === value) {\n      setValue(-1)\n    } else {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <Card elevation={0} style={{ marginBottom: '4em', border: '1px solid #9e9e9e' }}>\n      <CardMedia style={{ padding: '0', borderBottom: '1px solid #9e9e9e' }}>\n        <Grid container spacing={4}>\n          <Grid item xs={2} >\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontWeight: \"900\", padding: '10px 10px', paddingLeft: '2em' }}>\n              1. Import From\n          </Typography>\n          </Grid>\n          <Grid item xs={8}>\n            {\n              buttomIteams.map((item, buttonIndex) => {\n                return (\n                  <Button\n                    key={buttonIndex}\n                    size=\"small\"\n                    className={classes.topbarButton}\n                    onClick={() => handleChange(buttonIndex)}\n                    style={buttonIndex === value ? { color: 'black' } : null}\n                  >\n                    {item}\n                  </Button>\n                )\n              })\n            }\n          </Grid>\n        </Grid>\n      </CardMedia>\n\n      <Collapse in={value === 0}>\n        <ClipboardImport />\n      </Collapse>\n\n      <Collapse in={value === 1}>\n      </Collapse>\n\n      <Collapse in={value === 2}>\n      </Collapse>\n\n      <Collapse in={value === 3}>\n      </Collapse>\n\n    </Card>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Box } from '@material-ui/core';\n\nimport BaseTable, { AutoResizer } from 'react-base-table';\nimport 'react-base-table/styles.css';\nimport './tableStyle.css';\n\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport default function DataTable() {\n  const classes = useStyles();\n\n  const { tableRow, tableColumn, loaded } = useSelector((state) => ({\n    tableRow: state.TableData.tableRow,\n    tableColumn: state.TableData.tableColumn,\n    loaded: state.TableData.loaded\n  }));\n\n  const [sortBy, setSortBy] = useState({ key: '', order: 'asc' });\n\n  const handleSetSort = (sortBy) => {\n    setSortBy(sortBy);\n  }\n\n  const onColumnSort = (sortBy) => {\n    if (loaded) {\n      const order = sortBy.order === 'asc' ? 1 : -1;\n      const tmpRow = [...tableRow];\n      return tmpRow.sort((a, b) => (a[sortBy.key] > b[sortBy.key] ? order : -order));\n    } else {\n      return []\n    }\n  };\n\n  return (\n    <div style={{ overflowX: 'auto', textAlign: 'center', marginTop: \"0px\", paddingTop: '0px' }}>\n      <div style={{ width: '100%', height: '30em' }}>\n        <AutoResizer>\n          {({ width, height }) => {\n            return (\n              <BaseTable\n                width={width}\n                height={height}\n                fixed\n                rowKey=\"rowKey\"\n                // estimatedRowHeight={({ rowData, rowIndex }) => estRowHight(rowData, rowIndex)}\n                // estimatedRowHeight={61}\n                columns={tableColumn}\n                data={onColumnSort(sortBy)}\n                sortBy={sortBy}\n                onColumnSort={handleSetSort}\n                emptyRenderer={\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    minHeight=\"20em\">\n                    <Typography\n                      variant=\"h5\"\n                      gutterBottom\n                      style={{ color: 'grey', fontWeight: '900' }}>\n                      No data imported...\n                </Typography>\n                  </Box>\n                }\n              />\n            );\n          }}\n        </AutoResizer>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Collapse, Button, Card, CardMedia, Grid } from '@material-ui/core';\n\nimport { useSelector } from 'react-redux';\n\nimport DataTable from './DataTable'\n\nconst useStyles = makeStyles((theme) => ({\n  topbarButton: {\n    margin: '6px 10px',\n    marginRight: '20px',\n    fontWeight: '500',\n    color: 'lightgrey',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  }\n}));\n\nexport default function TablePanel() {\n  const classes = useStyles();\n  const buttomIteams = ['Table', 'Filter']\n  const [value, setValue] = React.useState(0);\n\n  const { tableRow, tableColumn, loaded } = useSelector((state) => ({\n    tableRow: state.TableData.tableRow,\n    tableColumn: state.TableData.tableColumn,\n    loaded: state.TableData.loaded\n  }));\n\n  const handleChange = (newValue) => {\n    if (newValue === value) {\n      setValue(-1)\n    } else {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <Card elevation={0} style={{ marginBottom: '4em', border: '1px solid #9e9e9e' }}>\n      <CardMedia style={{ padding: '0', borderBottom: '1px solid #9e9e9e' }}>\n        <Grid container spacing={4}>\n          <Grid item xs={2} >\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontWeight: \"900\", padding: '10px 10px', paddingLeft: '2em' }}>\n              1. Data Table\n          </Typography>\n          </Grid>\n          <Grid item xs={7}>\n            {\n              buttomIteams.map((item, buttonIndex) => {\n                return (\n                  <Button\n                    key={buttonIndex}\n                    size=\"small\"\n                    className={classes.topbarButton}\n                    onClick={() => handleChange(buttonIndex)}\n                    style={buttonIndex === value ? { color: 'black' } : null}\n                  >\n                    {item}\n                  </Button>\n                )\n              })\n            }\n          </Grid>\n          <Grid item xs={3}>\n            <div style={{ padding: '12px 12px', float: 'right', fontSize: '0.85em' }}>\n              <b style={{ color: 'black' }}>\n                {tableRow.length}\n                {/* <CountUp end={table.rowLength} /> */}\n              </b>\n        &nbsp;\n        <span style={{ color: 'grey' }}> rows </span>\n         &nbsp;\n        <b style={{ color: 'black' }}>\n                {tableColumn.length}\n                {/* <CountUp end={props.columnLength} /> */}\n              </b>\n        &nbsp;\n        <span style={{ color: 'grey' }}> cols </span>\n            </div>\n          </Grid>\n        </Grid>\n      </CardMedia>\n\n      <Collapse in={value === 0}>\n        <DataTable />\n      </Collapse>\n\n      <Collapse in={value === 1}>\n      </Collapse>\n\n      <Collapse in={value === 2}>\n      </Collapse>\n\n      <Collapse in={value === 3}>\n      </Collapse>\n\n    </Card>\n  );\n}","export default {\n  title: {\n    text: 'Histogram',\n    left: 'center',\n    top: 20,\n  },\n  tooltip: {\n    backgroundColor: 'rgba(255,255,255,0.9)',\n    trigger: 'item',\n    axisPointer: {\n      animation: true,\n      type: 'cross',\n      lineStyle: {\n        type: 'dashed',\n        width: 1,\n      },\n    },\n    formatter: 'Data Value (x-axis): {b} <br/> {a} (y-axis): {c0} -  {c1} - {c2}',\n  },\n  color: ['#f2cc8f'],\n  grid: {\n    left: '6%',\n    right: '3%',\n    bottom: '10%',\n    containLabel: true,\n  },\n  xAxis: [\n    {\n      type: 'category',\n      scale: true,\n      nameGap: 40,\n      nameLocation: 'middle',\n      name: 'Distribution Value',\n    },\n  ],\n  yAxis: [\n    {\n      type: 'value',\n      scale: true,\n      nameGap: 60,\n      nameLocation: 'middle',\n      name: 'Total Counts',\n      splitLine: {\n        show: true,\n        lineStyle: {\n          type: 'dashed',\n          // width: 0.5,\n          color: '#e0e0e0',\n        },\n      },\n    },\n  ],\n  toolbox: {\n    feature: {\n      dataZoom: {\n        title: {\n          zoom: 'Zoom In',\n          back: 'Zoom Reset',\n        },\n      },\n      brush: {\n        type: ['rect', 'polygon', 'clear'],\n        title: {\n          rect: 'Rectangle Area',\n          polygon: 'Random Shape',\n          clear: 'Area Reset',\n        },\n      },\n      saveAsImage: {\n        title: 'Save As Image',\n      },\n    },\n  },\n  series: [\n    {\n      name: 'Total Counts',\n      type: 'bar',\n      barWidth: '80%',\n      data: [],\n      itemStyle: {\n        borderWidth: 0,\n        // shadowColor: 'rgba(0, 0, 0, 0.5)',\n        // shadowBlur: 10,\n      },\n    },\n  ],\n};","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Card, CardContent, Grid, Box, Typography, Button } from '@material-ui/core';\n\nimport ReactEcharts from 'echarts-for-react';\n\nconst Chart = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: \"0px\", paddingTop: '0px' }}>\n      {\n        props.plotReady ? (\n          <ReactEcharts\n            id=\"fullChart\"\n            option={props.option}\n            notMerge={true}\n            lazyUpdate={true}\n            style={{ height: '40em' }}\n          />\n        ) : (\n            <div>\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                minHeight=\"40em\">\n                <Typography\n                  variant=\"h5\"\n                  gutterBottom\n                  style={{ color: 'grey', fontWeight: '900' }}>\n                  {props.errorMsg}\n                </Typography>\n              </Box>\n            </div>\n          )\n      }\n\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxHeight: 800,\n    overflowY: 'auto',\n  },\n  rotateSelect: {\n    position: 'relative',\n    top: '40%',\n  },\n}));\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Collapse, Button, Card, CardMedia, Grid } from '@material-ui/core';\n\nimport { useSelector } from 'react-redux';\n\nimport { CreatePvalueHist } from './js/CreatePvalueHist'\n\nimport Chart from './Chart'\n\nconst useStyles = makeStyles((theme) => ({\n  topbarButton: {\n    margin: '6px 10px',\n    marginRight: '20px',\n    fontWeight: '500',\n    color: 'lightgrey',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  }\n}));\n\nexport default function ChartPanel() {\n  const classes = useStyles();\n  const buttomIteams = ['Chart', 'Tune']\n  const [value, setValue] = React.useState(0);\n\n  const { tableRow, tableColumn, loaded } = useSelector((state) => ({\n    tableRow: state.TableData.tableRow,\n    tableColumn: state.TableData.tableColumn,\n    loaded: state.TableData.loaded\n  }));\n\n  useEffect(() => {\n    if (loaded) {\n      RestParameters()\n      try {\n        var newPlot = CreatePvalueHist(tableColumn, tableRow, { name: 'P_Value', key: 'P_Value' });\n\n        setOption(newPlot.option);\n        // setEventsDict(newPlot.EventsDict);\n        setWarningMsg(newPlot.warningMsg);\n        setErrorMsg(newPlot.errorMsg);\n        setMSG(newPlot.msg);\n        setPlotReady(newPlot.plotReady);\n      }\n      catch (err) {\n        setErrorMsg('Generate Plot Failed');\n      }\n\n\n    }\n  }, [loaded])\n\n  // const [xAxis, setXAxis] = useState(null);\n  // const [yAxis, setYAxis] = useState(null);\n  const [plotReady, setPlotReady] = useState(false);\n  // const [EventsDict, setEventsDict] = useState(null);\n  const [msg, setMSG] = useState('');\n  const [warningMsg, setWarningMsg] = useState('');\n  const [errorMsg, setErrorMsg] = useState('Plot option is not detected...');\n  const [option, setOption] = useState([]);\n\n  const RestParameters = () => {\n    setOption([]);\n    // setEventsDict(newPlot.EventsDict);\n    setWarningMsg('');\n    setErrorMsg('Plot option is not detected...');\n    setMSG('');\n    setPlotReady(false);\n  }\n\n  const handleChange = (newValue) => {\n    if (newValue === value) {\n      setValue(-1)\n    } else {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <Card elevation={0} style={{ marginBottom: '4em', border: '1px solid #9e9e9e' }}>\n      <CardMedia style={{ padding: '0', borderBottom: '1px solid #9e9e9e' }}>\n        <Grid container spacing={4}>\n          <Grid item xs={2} >\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontWeight: \"900\", padding: '10px 10px', paddingLeft: '2em' }}>\n              3. Chart\n          </Typography>\n          </Grid>\n          <Grid item xs={8}>\n            {\n              buttomIteams.map((item, buttonIndex) => {\n                return (\n                  <Button\n                    key={buttonIndex}\n                    size=\"small\"\n                    className={classes.topbarButton}\n                    onClick={() => handleChange(buttonIndex)}\n                    style={buttonIndex === value ? { color: 'black' } : null}\n                  >\n                    {item}\n                  </Button>\n                )\n              })\n            }\n          </Grid>\n        </Grid>\n      </CardMedia>\n\n      <Collapse in={value === 0}>\n        <Chart option={option} plotReady={plotReady} errorMsg={errorMsg} />\n      </Collapse>\n\n    </Card>\n  );\n}","import React from 'react';\nimport ecStat from 'echarts-stat';\n\nimport PvalueHistOption from './TemplateOptions/PvalueHistOption';\n\nexport const CreatePvalueHist = (mycolumns, myrows, axis) => {\n\n  if (!mycolumns.find(x => x.key === axis.key)) {\n    return {\n      option: [],\n      EventsDict: {},\n      msg: '',\n      errorMsg: 'Seems ' + axis.name + ' does not exist in your column. Try assign correct column in Tune tab.',\n      plotReady: false,\n    };\n  }\n\n  let tmpValue = myrows.map((x) => Number(x[axis.key]));\n\n  if (tmpValue.length < 2) {\n    return {\n      option: [],\n      EventsDict: {},\n      msg: '',\n      errorMsg: 'Not enought row to draw Histogram, at least 2 rows required',\n      plotReady: false,\n    };\n  }\n\n  if (tmpValue.filter(x => !isNaN(x)).length < 2) {\n    return {\n      option: [],\n      EventsDict: {},\n      msg: '',\n      errorMsg: 'Seems there are too many NA in your ' + axis.name + ' column.',\n      plotReady: false,\n    };\n  }\n\n  // ------------------- Input Check ----------------------\n\n  var bins = ecStat.histogram(tmpValue);\n\n  const newHistogramOption = JSON.parse(JSON.stringify(PvalueHistOption));\n\n  newHistogramOption.title.text = 'Histogram for Distribution of ' + axis.name;\n  newHistogramOption.tooltip.formatter = function (params) {\n    return `${axis.name} (x-axis): <b>${params.value[0]}</b><br />\n            Total counts (y-axis): <b>${params.value[1]}</b>`;\n  };\n  newHistogramOption.xAxis[0].name = axis.name;\n\n  newHistogramOption.series[0].data = bins.data;\n\n  let tmpMsg =\n    'Now you have chose one number column, histogram will be plotted one the left. \\n\\n' +\n    'Note that The x-axis in a histogram is a number line that has been split into number ranges , ' +\n    ' or bins. NOT actually ' +\n    axis.name +\n    ' value. the height of the bar represents the number of data points that fall into that range. \\n\\n' +\n    'You may hover on bar to check total counts (y axis) and corresponding ' +\n    axis.name +\n    ' value range in distribution (x axis).\\n\\n' +\n    'If you use row filter and column filter, the plot will change promptly';\n\n  return {\n    option: newHistogramOption,\n    EventsDict: {},\n    msg: tmpMsg,\n    errorMsg: '',\n    warningMsg: '',\n    plotReady: true,\n  };\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Container, Typography } from '@material-ui/core';\n\n\nimport ImportPanel from '../components/DataImport/ImportPanel'\nimport TablePanel from '../components/BaseTable/TablePanel'\nimport ChartPanel from '../components/Echart/ChartPanel'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'left'\n  }\n}));\n\nexport default function PvalueDistribution() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component=\"main\" maxWidth=\"lg\">\n        <Typography variant=\"h4\" gutterBottom style={{ fontWeight: \"100\", marginBottom: '1.2em', textAlign: 'center' }}>\n          P Value Distribution\n        </Typography>\n\n        <ImportPanel />\n        <TablePanel />\n        <ChartPanel />\n\n      </Container>\n    </div >\n  );\n}\n","import './App.css';\n\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { grey, amber } from '@material-ui/core/colors';\n\nimport Layout from './components/layout/layout'\n\nimport Home from './pages/Home'\nimport PvalueDistribution from './pages/PvalueDistribution'\n\nconst outerTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[800],\n    },\n    secondary: {\n      main: '#f2cc8f',\n    },\n  },\n});\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <ThemeProvider theme={outerTheme}>\n          <Layout >\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/PvalueDistribution\" component={PvalueDistribution} />\n            </Switch>\n          </Layout>\n        </ThemeProvider>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_TABLEDATA, SET_TABLEDATA_SUCCESS, SET_TABLEDATA_FAIL } from '../types/tableData';\n\nconst initialState = {\n  tableRow: [],\n  tableColumn: [],\n  loaded: false,\n  error: false\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TABLEDATA: {\n      return {\n        ...state,\n        tableRow: [],\n        tableColumn: [],\n        loaded: false,\n        error: false\n      };\n    }\n    case SET_TABLEDATA_SUCCESS: {\n      return {\n        ...state,\n        tableRow: action.payload.tableRow,\n        tableColumn: action.payload.tableColumn,\n        loaded: true,\n      };\n    }\n    case SET_TABLEDATA_FAIL: {\n      return {\n        ...state,\n        error: action.payload.data\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport TableData from './tableData'\n\nexport default combineReducers({\n  TableData\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}